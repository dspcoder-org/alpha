Problem Description
    Given the head of a singly linked list, write a function to find the middle element of the linked list.
    If the list has an even number of nodes, return the second middle node.
    Input format:
    The input consists of two lines. The first line contains an integer n, representing the number of nodes in the linked list.
    The second line contains n space-separated integers, the values of the nodes in the linked list.

Examples
    Example 1:
    Input:
        5
        1 2 3 4 5
    Output: 3
    Explanation: The middle node in the odd-length list is the 3rd node.

    Example 2:
    Input: 
        4
        1 2 3 4
    Output: 3
    Explanation: For an even-length list, return the second middle node (the 3rd node).

    Example 3:
    Input: 
        1
        42
    Output: 42
    Explanation: For a single-node list, return that node.

Constraints
The number of nodes in the list is in the range [1, 10⁴].
-10⁵ ≤ Node.val ≤ 10⁵